USE MASTER
GO

IF DB_ID('DBYape') IS NOT NULL
	DROP DATABASE DBYape
GO

CREATE DATABASE DBYape
GO

USE DBYape
GO

CREATE SCHEMA LOGINS
GO
CREATE SCHEMA DATOS
GO

CREATE TABLE LOGINS.CLIENTE
(
	IDE_CLI		INT				PRIMARY KEY NONCLUSTERED IDENTITY(1,1),
	DNI_CLI		CHAR(9)			NOT NULL UNIQUE,
	NOM_CLI		VARCHAR(50)		NOT NULL,
	APE_CLI		VARCHAR(50)		NOT NULL,
	NUM_CLI		CHAR(9)			NOT NULL UNIQUE,
	SAL_CLI		FLOAT			NOT NULL DEFAULT 0.0,
	CLA_CLI		VARCHAR(100)	NOT NULL,
	CHECK(SAL_CLI > 0) 
)
GO

CREATE TABLE DATOS.YAPE
(
	IDE_YAP		INT		PRIMARY	KEY NONCLUSTERED IDENTITY(1,1),
	NRC_YAP		CHAR(9)	NOT NULL,
	NRZ_YAP		CHAR(9) NOT NULL,
	MON_YAP		FLOAT	NOT NULL CHECK(MON_YAP > 0),
	FEC_YAP		DATETIME NOT NULL DEFAULT GETDATE(),
	FOREIGN KEY(NRC_YAP) REFERENCES LOGINS.CLIENTE(NUM_CLI),
	FOREIGN KEY(NRZ_YAP) REFERENCES LOGINS.CLIENTE(NUM_CLI)
)
GO

CREATE TABLE DATOS.DETALLECLIYAP
(
	IDE_DET     INT NOT NULL IDENTITY(1,1),
	IDE_CLI_REC INT	NOT NULL,
	IDE_CLI_REA INT NOT NULL,
	IDE_YAP	    INT	NOT NULL
	CONSTRAINT FK_TO_CLIREA FOREIGN KEY(IDE_CLI_REA) REFERENCES LOGINS.CLIENTE(IDE_CLI),
	CONSTRAINT FK_TO_CLIREC FOREIGN KEY(IDE_CLI_REC) REFERENCES LOGINS.CLIENTE(IDE_CLI),
	CONSTRAINT FK_TO_IDEYAP FOREIGN KEY(IDE_YAP) REFERENCES DATOS.YAPE(IDE_YAP),
	CONSTRAINT FK_TO_IDEDET PRIMARY KEY(IDE_DET)
)
GO

CREATE TABLE LOGINS.USUARIOSACTIVOS
(
	IDE_CLI INT		NOT NULL,
	NUM_CLI	CHAR(9)	NOT NULL,
	FOREIGN KEY (IDE_CLI) REFERENCES LOGINS.CLIENTE(IDE_CLI),
	PRIMARY KEY (IDE_CLI)
)
GO

INSERT INTO LOGINS.CLIENTE
	(DNI_CLI, NOM_CLI, APE_CLI, NUM_CLI, SAL_CLI, CLA_CLI)
VALUES
	('78474311','Diego Anderson','Villena Arias','999888777',384.24,'Diego24'),
	('73674621','Dario Benjamin','Quintana Pascual','999333222',511.34,'Benja31'),
	('48575221','Flor Ariana','Tuesta Quesada','913344552',1384.34,'Flor38')
GO

INSERT INTO DATOS.YAPE
	(NRC_YAP, NRZ_YAP, MON_YAP, FEC_YAP)
VALUES
	('999888777', '999333222', 38.21, '20230211 10:00:01 PM'),
	('999333222', '999888777', 43.10, '20240623 03:52:22 PM'),
	('999333222', '999888777', 10.38,'20240321 01:14:01 AM'),
	('999333222', '913344552', 193.23,'20231229 11:54:22 PM'),
	('999888777', '999333222', 394.12, '20240623 09:54:01 PM'),
	('999333222', '913344552', 37.21, '20230624 01:54:01 PM')
GO

INSERT INTO DATOS.DETALLECLIYAP
VALUES
(1,2,1),
(2,1,2),
(2,1,3),
(2,3,4),
(1,2,5),
(2,3,6)
GO

-- CREAR PROCEDIMIENTOS ALMACENADOS

CREATE PROCEDURE SP_ValidarInicioSesion
(
	@numero CHAR(9),
	@clave	VARCHAR(100)
)
AS
BEGIN
	SELECT 
		C.IDE_CLI,
		C.NUM_CLI,
		C.CLA_CLI
	FROM LOGINS.CLIENTE AS C
	WHERE C.NUM_CLI = @numero AND C.CLA_CLI = @clave
END
GO

CREATE PROCEDURE SP_AgregarNuevaSesion
(
	@id		INT,
	@numero	char(9)
)
AS
BEGIN
	INSERT INTO LOGINS.USUARIOSACTIVOS
	VALUES(@id, @numero)
END
GO

CREATE PROCEDURE SP_BuscarSesion
(
	@id INT
)
AS
BEGIN
	SELECT U.*
	FROM LOGINS.USUARIOSACTIVOS U
	WHERE U.IDE_CLI = @id
END
GO

CREATE PROCEDURE SP_EliminarSesion
(
	@id	INT
)
AS
BEGIN
	DELETE FROM LOGINS.USUARIOSACTIVOS WHERE IDE_CLI = @id
END
GO

CREATE PROCEDURE SP_EliminarTodasLasSesiones
AS
BEGIN
	DELETE FROM LOGINS.USUARIOSACTIVOS
END
GO

CREATE OR ALTER FUNCTION FN_ObtenerSaldo
(
	@id	INT
)
RETURNS FLOAT
AS
BEGIN
	DECLARE @saldo FLOAT;

	SELECT @saldo = C.SAL_CLI
	FROM LOGINS.USUARIOSACTIVOS U
	JOIN LOGINS.CLIENTE C ON C.IDE_CLI = U.IDE_CLI 
	WHERE U.IDE_CLI = @id;

	RETURN @saldo;
END
GO

CREATE FUNCTION FN_ObtenerID
(
	@numero	INT
)
RETURNS INT
AS
BEGIN
	DECLARE @id INT;

	SELECT @id = C.IDE_CLI
	FROM LOGINS.CLIENTE C
	WHERE C.NUM_CLI = @numero;

	RETURN @id;
END
GO

CREATE OR ALTER PROCEDURE SP_RealizarYapeo
(
	@numeroRecibiente	char(9),
	@numeroRealizante	char(9),
	@monto				FLOAT
) 
AS
BEGIN
	DECLARE @idRealizante INT;
	DECLARE @idRecibiente INT;
	DECLARE @saldoCuenta FLOAT;
	DECLARE @idYape INT;

	EXEC @idRecibiente = FN_ObtenerID @numeroRecibiente;
	EXEC @idRealizante = FN_ObtenerID @numeroRealizante;
	EXEC @saldoCuenta = FN_ObtenerSaldo @idRealizante;

	IF (@saldoCuenta IS NULL)
		BEGIN
			SELECT 'Ocurrió un problema, vuelva a iniciar sesión' AS [Mensaje]
			RETURN;
		END
	ELSE IF(@saldoCuenta < @monto)
		BEGIN
			SELECT 'Error >> Saldo Insuficiente' AS [Mensaje]
			RETURN;
		END
	ELSE IF(@idRecibiente IS NULL)
		BEGIN
			SELECT 'Error >> Numero no Encontrado' AS [Mensaje]
			RETURN;
		END
	ELSE
		BEGIN
			SELECT 'Yape Realizado Correctamente' AS [Mensaje]
		END
		BEGIN
			INSERT INTO DATOS.YAPE (NRC_YAP, NRZ_YAP, MON_YAP)
			VALUES (@numeroRecibiente, @numeroRealizante, @monto);
		END
		BEGIN
			SET @idYape = (SELECT TOP 1 Y.IDE_YAP
						   FROM DATOS.YAPE AS Y
						   ORDER BY Y.IDE_YAP DESC)
		END
		BEGIN
			INSERT INTO DATOS.DETALLECLIYAP
			VALUES(@idRecibiente, @idRealizante, @idYape)
		END	
		BEGIN
			UPDATE LOGINS.CLIENTE SET SAL_CLI = @saldoCuenta - @monto
		END
END
GO

--SP_RealizarYapeo '999333222','999888777', 100

CREATE OR ALTER PROCEDURE SP_ListarYapes
(
	@numero	CHAR(9)
)
AS
BEGIN
	SELECT Y.IDE_YAP AS [CODIGO],
			Y.NRC_YAP AS [NUMERO RECIBIENTE],
			Y.NRZ_YAP AS [NUMERO REALIZANTE],
			Y.MON_YAP AS [MONTO],
			(CAST(DAY(Y.FEC_YAP) AS CHAR(2)) + SPACE(1) +
					'de' + SPACE(1) +
					(CASE MONTH(Y.FEC_YAP)
						 WHEN 1 THEN 'Enero'
						 WHEN 2 THEN 'Febrero'
						 WHEN 3 THEN 'Marzo'
						 WHEN 4 THEN 'Abril'
						 WHEN 5 THEN 'Mayo'
						 WHEN 6 THEN 'Junio'
						 WHEN 7 THEN 'Julio'
						 WHEN 8 THEN 'Agosto'
						 WHEN 9 THEN 'Septiembre'
						 WHEN 10 THEN 'Octubre'
						 WHEN 11 THEN 'Noviembre'
						 WHEN 12 THEN 'Diciembre'
					 END) + SPACE(1) +
					 'del' + SPACE(1) +
					 CAST(YEAR(Y.FEC_YAP) AS CHAR(4)) + SPACE(1) +
					 'a las' + SPACE(1) + 
					 FORMAT(Y.FEC_YAP, 'HH:mm')) AS [Fecha]
	FROM DATOS.YAPE AS Y
	WHERE Y.NRC_YAP = @numero OR Y.NRZ_YAP = @numero
END
GO

CREATE OR ALTER PROCEDURE SP_BuscarYapeXFecha
(
	@numero CHAR(9),
	@fecha	DATE
)
AS
BEGIN
	SET DATEFORMAT DMY
	SELECT	Y.IDE_YAP AS [CODIGO],
			Y.NRC_YAP AS [NUMERO RECIBIENTE],
			Y.NRZ_YAP AS [NUMERO REALIZANTE],
			Y.MON_YAP AS [MONTO],
			(CAST(DAY(Y.FEC_YAP) AS CHAR(2)) + SPACE(1) +
					'de' + SPACE(1) +
					(CASE MONTH(Y.FEC_YAP)
						 WHEN 1 THEN 'Enero'
						 WHEN 2 THEN 'Febrero'
						 WHEN 3 THEN 'Marzo'
						 WHEN 4 THEN 'Abril'
						 WHEN 5 THEN 'Mayo'
						 WHEN 6 THEN 'Junio'
						 WHEN 7 THEN 'Julio'
						 WHEN 8 THEN 'Agosto'
						 WHEN 9 THEN 'Septiembre'
						 WHEN 10 THEN 'Octubre'
						 WHEN 11 THEN 'Noviembre'
						 WHEN 12 THEN 'Diciembre'
					 END) + SPACE(1) +
					 'del' + SPACE(1) +
					 CAST(YEAR(Y.FEC_YAP) AS CHAR(4)) + SPACE(1) +
					 'a las' + SPACE(1) + 
					 FORMAT(Y.FEC_YAP, 'HH:mm')) AS [Fecha]
	FROM DATOS.YAPE AS Y
	WHERE (Y.NRC_YAP = @numero OR Y.NRZ_YAP = @numero) AND CAST(Y.FEC_YAP AS date) = @fecha
END
GO

SP_BuscarYapeXFecha 999888777, '2024-06-23'
GO

CREATE PROCEDURE SP_ObtenerNombre
(
	@numero CHAR(9)
)
AS
BEGIN
	SELECT (SELECT TOP 1 N.* FROM STRING_SPLIT(C.NOM_CLI, ' ') AS [N]) AS Nombre
	FROM LOGINS.CLIENTE AS [C]
	WHERE C.NUM_CLI = @numero
END
GO

CREATE PROCEDURE SP_ObtenerApellido
(
	@numero CHAR(9)
)
AS
BEGIN
	SELECT (SELECT TOP 1 N.* FROM STRING_SPLIT(C.APE_CLI, ' ') AS [N]) AS Apellido
	FROM LOGINS.CLIENTE AS [C]
	WHERE C.NUM_CLI = @numero
END
GO

CREATE OR ALTER PROCEDURE SP_ObtenerNombreCompleto
(
	@numero CHAR(9)
)
AS
BEGIN
	SELECT CONCAT(C.NOM_CLI,' ', C.APE_CLI) AS NombreCompleto
	FROM LOGINS.CLIENTE C
	WHERE C.NUM_CLI = @numero
END
GO

CREATE PROCEDURE Sp_ObtenerSaldo
(
	@numero CHAR(9)
)
AS
BEGIN
	SELECT C.SAL_CLI
	FROM LOGINS.CLIENTE C
	WHERE C.NUM_CLI = @numero
END
GO

CREATE PROCEDURE Sp_ObtenerIDClientexNumero
(
	@numero	CHAR(9)
)
AS
BEGIN
	SELECT U.IDE_CLI
	FROM LOGINS.USUARIOSACTIVOS U
	WHERE U.NUM_CLI = @numero
END
GO

CREATE PROCEDURE Sp_SesionesActivas
AS
BEGIN
	SELECT U.*
	FROM LOGINS.USUARIOSACTIVOS U
END
GO