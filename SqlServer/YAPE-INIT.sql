USE MASTER
GO

IF DB_ID('DBYape') IS NOT NULL
	DROP DATABASE DBYape
GO

CREATE DATABASE DBYape
GO

USE DBYape
GO

CREATE SCHEMA LOGINS
GO
CREATE SCHEMA DATOS
GO

CREATE TABLE LOGINS.CLIENTE
(
	IDE_CLI		INT				PRIMARY KEY NONCLUSTERED IDENTITY(1,1),
	DNI_CLI		CHAR(9)			NOT NULL,
	NOM_CLI		VARCHAR(50)		NOT NULL,
	APE_CLI		VARCHAR(50)		NOT NULL,
	NUM_CLI		CHAR(9)			NOT NULL UNIQUE,
	SAL_CLI		FLOAT			DEFAULT 0.0,
	CLA_CLI		VARCHAR(100)	NOT NULL,
)
GO

CREATE TABLE DATOS.YAPE
(
	IDE_YAP		INT		PRIMARY	KEY NONCLUSTERED IDENTITY(1,1),
	NRC_YAP		CHAR(9)	NOT NULL,
	NRZ_YAP		CHAR(9) NOT NULL,
	MON_YAP		FLOAT	NOT NULL CHECK(MON_YAP > 0),
	FEC_YAP		DATETIME NOT NULL DEFAULT GETDATE(),
	FOREIGN KEY(NRC_YAP) REFERENCES LOGINS.CLIENTE(NUM_CLI),
	FOREIGN KEY(NRZ_YAP) REFERENCES LOGINS.CLIENTE(NUM_CLI)
)
GO

CREATE TABLE DATOS.DETALLECLIYAP
(
	IDE_CLI INT	NOT NULL,
	IDE_YAP	INT	NOT NULL
	FOREIGN KEY(IDE_CLI) REFERENCES LOGINS.CLIENTE(IDE_CLI),
	FOREIGN KEY(IDE_YAP) REFERENCES DATOS.YAPE(IDE_YAP),
	PRIMARY KEY(IDE_CLI, IDE_YAP)
)
GO

CREATE TABLE LOGINS.USUARIOSACTIVOS
(
	IDE_CLI INT		NOT NULL,
	NUM_CLI	CHAR(9)	NOT NULL,
	FOREIGN KEY (IDE_CLI) REFERENCES LOGINS.CLIENTE(IDE_CLI),
	PRIMARY KEY (IDE_CLI)
)
GO

INSERT INTO LOGINS.CLIENTE
	(DNI_CLI, NOM_CLI, APE_CLI, NUM_CLI, SAL_CLI, CLA_CLI)
VALUES
	('78474311','Diego Anderson','Villena Arias','999888777',384.24,'Diego24'),
	('73674621','Dario Benjamin','Quintana Pascual','999333222',511.34,'Benja31'),
	('48575221','Flor Ariana','Tuesta Quesada','113344552',1384.34,'Flor38')
GO

INSERT INTO DATOS.YAPE
	(NRC_YAP, NRZ_YAP, MON_YAP)
VALUES
	('999888777', '999333222', 38.21),
	('999333222', '999888777', 43.10),
	('999333222', '999888777', 10.38),
	('999333222', '113344552', 193.23 )
GO

-- CREAR PROCEDIMIENTOS ALMACENADOS

CREATE PROCEDURE SP_ValidarInicioSesion
(
	@numero CHAR(9),
	@clave	VARCHAR(100)
)
AS
BEGIN
	SELECT 
		C.IDE_CLI,
		C.NUM_CLI,
		C.CLA_CLI
	FROM LOGINS.CLIENTE AS C
	WHERE C.NUM_CLI = @numero AND C.CLA_CLI = @clave
END
GO

CREATE PROCEDURE SP_AgregarNuevaSesion
(
	@id		INT,
	@numero	char(9)
)
AS
BEGIN
	INSERT INTO LOGINS.USUARIOSACTIVOS
	VALUES(@id, @numero)
END
GO

CREATE PROCEDURE SP_BuscarSesion
(
	@id INT
)
AS
BEGIN
	SELECT U.*
	FROM LOGINS.USUARIOSACTIVOS U
	WHERE U.IDE_CLI = @id
END
GO

CREATE PROCEDURE SP_EliminarSesion
(
	@id	INT
)
AS
BEGIN
	DELETE FROM LOGINS.USUARIOSACTIVOS WHERE IDE_CLI = @id
END
GO

CREATE PROCEDURE SP_EliminarTodasLasSesiones
AS
BEGIN
	DELETE FROM LOGINS.USUARIOSACTIVOS
END
GO

CREATE FUNCTION FN_ObtenerSaldo
(
	@id	INT
)
RETURNS FLOAT
AS
BEGIN
	DECLARE @saldo FLOAT;

	SELECT @saldo = C.SAL_CLI
	FROM LOGINS.USUARIOSACTIVOS U
	JOIN LOGINS.CLIENTE C ON C.IDE_CLI = U.IDE_CLI 
	WHERE U.IDE_CLI = @id;

	RETURN @saldo;
END
GO

CREATE FUNCTION FN_ObtenerID
(
	@numero	INT
)
RETURNS INT
AS
BEGIN
	DECLARE @id INT;

	SELECT @id = C.IDE_CLI
	FROM LOGINS.CLIENTE C
	WHERE C.NUM_CLI = @numero;

	RETURN @id;
END
GO

CREATE PROCEDURE SP_RealizarYapeo
(
	@numeroRealizante	char(9),
	@numeroRecibiente	char(9),
	@monto				FLOAT
) 
AS
BEGIN
	DECLARE @id INT;
	DECLARE @saldoCuenta FLOAT;

	EXEC @id = FN_ObtenerID @numeroRealizante;
	EXEC @saldoCuenta = FN_ObtenerSaldo @id;

	IF(@saldoCuenta < @monto)
		BEGIN
			SELECT 'Saldo Insuficiente' AS [Mensaje];
			RETURN;
		END
	ELSE
		BEGIN
			SELECT @id as pe;
			INSERT INTO DATOS.YAPE (NRC_YAP, NRZ_YAP, MON_YAP)
			VALUES (@numeroRecibiente, @numeroRealizante, @monto);
		END
END
GO

--SP_RealizarYapeo'999333222','999888777',900

CREATE PROCEDURE SP_ListarYapes
(
	@numero	CHAR(9)
)
AS
BEGIN
	SELECT Y.*
	FROM DATOS.YAPE AS Y
	WHERE Y.NRC_YAP = @numero OR Y.NRZ_YAP = @numero
END
GO

CREATE PROCEDURE SP_BuscarYape
(
	@numero CHAR(9),
	@id		INT
)
AS
BEGIN
	SELECT *
	FROM DATOS.YAPE AS Y
	WHERE Y.NRC_YAP = @numero OR Y.NRZ_YAP = @numero
END
GO